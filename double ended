
#include<stdio.h>
#define n 7
int arr[n],front=-1,rear=-1,count=0;
void enqueue_rear(){
        int val;
        printf("enter an element to insert at end");
        scanf("%d",&val);
        if(front==0 && rear==n-1 || front==rear+1){
                printf("queue is full\n");
                return;
        }
        else if(front==-1 && rear==-1){
                front=0;
                rear=0;

        }
        else if(rear==n-1){
            rear=0;
                
                

        }
        else{
                rear+=1;

        }
        arr[rear]=val;
        count++;
        

}
void enqueue_front (){
        if(front==0 && rear==n-1 || front==rear+1){
                printf("ur array is full\n");
        }
        else{
            int ele;
                printf("enter a value to insert at font: ");
                scanf("%d",&ele);
                if(front==-1){
			front=0;
			rear=0;
                        
                }
                else if(front==0){
			front=n-1;
                       
                }
		else
			front--;
		 arr[front]=ele;
                count++;
        }
}
void dequeue_front(){
        int ele;
        if(rear==-1 && front==-1 ){
                printf("queue if empty\n");
        }
        else{
		printf("deleted element in front is %d \n",arr[front]);
                if(front==rear){
                front=-1;
		rear=-1;
        }
        else if(front==n-1 ){
		front=0;
                
        }
        else {
                front++;
        }

        count--;
        }
}
void dequeue_rear(){
        if(rear==-1 && rear==-1){
                printf("queue is empty\n");
        }
        else{
        printf("deleted at rear part is %d\n",arr[rear]);
        if(front==rear){
            
            front=-1;
            rear=-1;
        }
        else if(rear==0){
            rear=n-1;
        }
        else{
            rear-=1;
        }
        }
}
void display(){
        printf("your array after performing insert and deleting operations :    \n");
        
        int temp=front;
        if(front==rear+1 || front==-1 && rear==-1){
            printf("your array is empty\n");
            return;
        }
        while(front!=rear){
                
                printf("%d  ",arr[front]);
                front=(front+1)%n;
                count--;
        }
        printf("%d \n ",arr[front]);
        front=temp;
}
void getfront(){
    printf("front is-%d",front);
}
void getrear(){
    printf("rear is-%d",rear);
}
int main(){
    int ch;
    printf("\nmenu:\n1:enqueue at front \n2:enqeue at rear\n3:dequeue at front \n4:deqeue at rear\n5:front val:\n6:rear val\n7:display\n");
       
     while(1){
        printf("enter number: ");
        scanf("%d",&ch);
        switch(ch){
            case 1: enqueue_front();
                    
                    break;
            case 2: enqueue_rear();
                    
                    break;
            case 3: dequeue_front();
                    
                    break;
            case 4: dequeue_rear();
                   
                    break;
            case 5: getfront();
                    break;
            case 6 :getrear();
                    break;
            case 7: display();
                    break;
        }
        if(ch>7){
            printf("you have came out of the loop\n");
            break;
        }
    }

}
